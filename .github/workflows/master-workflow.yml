name: master-workflow

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build Java application
    runs-on: ubuntu-20.04
    steps:
    - name: Clone repository
      uses: actions/checkout@v2

    - name: Set up java version
      uses: actions/setup-java@v1
      with:
        java-version: 15

    - name: Run Unitary tests
      run: mvn -B '-Dtest=es.urjc.code.daw.library.unitary.*Test' test

    - name: Run Rest tests
      run: mvn -B '-Dtest=es.urjc.code.daw.library.e2e.rest.*Test' test

    - name: Run Selenium tests
      run: mvn -B '-Dtest=es.urjc.code.daw.library.e2e.selenium.*Test' test

    - name: Generate artifact
      run: mvn -B package -DskipTests

    - name: Upload jar for next job
      uses: actions/upload-artifact@v2
      with:
        name: target
        path: target
        retention-days: 1

  publish_in_dockerhub:
    name: Publish in DockerHub
    runs-on: ubuntu-20.04
    needs: [build]
    steps:
      - name: Clone the repository
        uses: actions/checkout@v2

      - name: Download Jar from previous job
        uses: actions/download-artifact@v1
        with:
          name: target

      - name: Generate tag
        run: echo ::set-output name=tag::$(mvn -q help:evaluate -Dexpression=project.version -DforceStdout)
        id: project

      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/books:${{ steps.project.outputs.tag }} .
      
      - name: Push image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/books:${{ steps.project.outputs.tag }}

  publish_in_heroku_registry:
    name: Publish in Heroku Registry
    runs-on: ubuntu-20.04
    needs: [build]
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_APP: ${{ secrets.HEROKU_APP }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Download Jar from previous job
        uses: actions/download-artifact@v1
        with:
          name: target

      - name: Build Docker Image
        run: docker build -t books .

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install-ubuntu.sh | sh

      - name: Change image name to point to Heroku registry
        run: docker tag books registry.heroku.com/$HEROKU_APP/web

      - name: Login in Heroku container registry
        run: heroku container:login

      - name: Push image to Heroku Registry
        run: docker push registry.heroku.com/$HEROKU_APP/web

  deploy_to_heroku:
    name: Deploy to Heroku
    runs-on: ubuntu-20.04
    needs: [publish_in_heroku_registry]
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_APP: ${{ secrets.HEROKU_APP }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install-ubuntu.sh | sh

      - name: Login in Heroku
        run: heroku container:login

      - name: Deploy to Heroku
        run: heroku container:release -a $HEROKU_APP web

  run_smoke_tests:
    name: Smoke tests
    runs-on: ubuntu-20.04
    needs: [deploy_to_heroku]
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        
      - name: Run Rest tests
        run: mvn -B "-Dtest=es.urjc.code.daw.library.e2e.rest.*Test" "-Dhost=ais-fesmounatmmourino-2021.herokuapp.com" test 

      - name: Run Selenium tests
        run: mvn -B "-Dtest=es.urjc.code.daw.library.e2e.selenium.*Test" "-Dhost=ais-fesmounatmmourino-2021.herokuapp.com" test